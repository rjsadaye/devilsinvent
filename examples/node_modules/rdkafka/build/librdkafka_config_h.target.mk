# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := librdkafka_config_h
### Rules for action "configure_librdkafka":
quiet_cmd_binding_gyp_librdkafka_config_h_target_configure_librdkafka = ACTION configuring librdkafka... $@
cmd_binding_gyp_librdkafka_config_h_target_configure_librdkafka = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p deps/librdkafka; eval "cd deps/librdkafka && ./configure"

deps/librdkafka/config.h: obj := $(abs_obj)
deps/librdkafka/config.h: builddir := $(abs_builddir)
deps/librdkafka/config.h: TOOLSET := $(TOOLSET)
deps/librdkafka/config.h: $(srcdir)/deps/librdkafka/configure FORCE_DO_CMD
	$(call do_cmd,binding_gyp_librdkafka_config_h_target_configure_librdkafka)

all_deps += deps/librdkafka/config.h
action_binding_gyp_librdkafka_config_h_target_configure_librdkafka_outputs := deps/librdkafka/config.h


### Rules for final target.
# Build our special outputs first.
$(obj).target/librdkafka_config_h.stamp: | $(action_binding_gyp_librdkafka_config_h_target_configure_librdkafka_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_librdkafka_config_h_target_configure_librdkafka_outputs): | 

$(obj).target/librdkafka_config_h.stamp: TOOLSET := $(TOOLSET)
$(obj).target/librdkafka_config_h.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/librdkafka_config_h.stamp
# Add target alias
.PHONY: librdkafka_config_h
librdkafka_config_h: $(obj).target/librdkafka_config_h.stamp

# Add target alias to "all" target.
.PHONY: all
all: librdkafka_config_h

